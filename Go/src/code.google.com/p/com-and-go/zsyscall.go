package com

// generated by mkcomcall syscalls.go iunknown.go idispatch.go

import (
	"syscall"
	"unsafe"
)

var _ unsafe.Pointer

var (
	modole32    = syscall.NewLazyDLL("ole32.dll")
	modoleaut32 = syscall.NewLazyDLL("oleaut32.dll")

	procCoInitialize     = modole32.NewProc("CoInitialize")
	procCoInitializeEx   = modole32.NewProc("CoInitializeEx")
	procCLSIDFromProgID  = modole32.NewProc("CLSIDFromProgID")
	procCoCreateInstance = modole32.NewProc("CoCreateInstance")
	procStringFromGUID2  = modole32.NewProc("StringFromGUID2")
	procCLSIDFromString  = modole32.NewProc("CLSIDFromString")
	procSysAllocString   = modoleaut32.NewProc("SysAllocString")
	procSysFreeString    = modoleaut32.NewProc("SysFreeString")
)

func CoInitialize(reserved int) (err error) {
	_res, _, _ := Syscall(procCoInitialize.Addr(),
		reserved)
	if _res != 0 {
		err = HResult(_res)
	}
	return
}

func CoInitializeEx(reserved uintptr, coInit int) (err error) {
	_res, _, _ := Syscall(procCoInitializeEx.Addr(),
		reserved,
		coInit)
	if _res != 0 {
		err = HResult(_res)
	}
	return
}

func CLSIDFromProgID(progID string) (classID GUID, err error) {
	_res, _, _ := Syscall(procCLSIDFromProgID.Addr(),
		BStrFromString(progID).P,
		&classID)
	if _res != 0 {
		err = HResult(_res)
	}
	return
}

func CoCreateInstance(classID *GUID, outer *IUnknown, clsContext uint32, iid *GUID) (instance unsafe.Pointer, err error) {
	_res, _, _ := Syscall(procCoCreateInstance.Addr(),
		classID,
		outer,
		clsContext,
		iid,
		&instance)
	if _res != 0 {
		err = HResult(_res)
	}
	return
}

func StringFromGUID2(guid *GUID, str []uint16) (n int) {
	_res, _, _ := Syscall(procStringFromGUID2.Addr(),
		guid,
		&str[0],
		len(str))
	n = int(_res)
	return
}

func CLSIDFromString(s string) (clsID GUID, err error) {
	_res, _, _ := Syscall(procCLSIDFromString.Addr(),
		BStrFromString(s).P,
		&clsID)
	if _res != 0 {
		err = HResult(_res)
	}
	return
}

func SysAllocString(s string) (bstr *uint16) {
	_res, _, _ := Syscall(procSysAllocString.Addr(),
		BStrFromString(s).P)
	bstr = (*uint16)(unsafe.Pointer(_res))
	return
}

func SysFreeString(s BStr) {
	_res, _, _ := Syscall(procSysFreeString.Addr(),
		s)
	_ = _res
	return
}

var IID_IDispatch = NewGUID("{00020400-0000-0000-C000-000000000046}")

type IDispatch struct {
	IUnknown
}

func (this *IDispatch) GetTypeInfoCount() (count uint32, err error) {
	_res, _, _ := Syscall(this.VTable[3],
		this,
		&count)
	if _res != 0 {
		err = HResult(_res)
	}
	return
}

func (this *IDispatch) GetTypeInfo(i uint, localeID uint32) (info *ITypeInfo, err error) {
	_res, _, _ := Syscall(this.VTable[4],
		this,
		i,
		localeID,
		&info)
	if _res != 0 {
		err = HResult(_res)
	}
	return
}

func (this *IDispatch) GetIDsOfNames(iid *GUID, names []*uint16, localeID uint32, dispIDs *uint32) (err error) {
	_res, _, _ := Syscall(this.VTable[5],
		this,
		iid,
		&names[0],
		len(names),
		localeID,
		dispIDs)
	if _res != 0 {
		err = HResult(_res)
	}
	return
}

func (this *IDispatch) Invoke(member uint32, iid *GUID, localeID uint32, flags uint16, params *DispParams) (result Variant, excepInfo ExcepInfo, argErr uint32, err error) {
	_res, _, _ := Syscall(this.VTable[6],
		this,
		member,
		iid,
		localeID,
		flags,
		params,
		&result,
		&excepInfo,
		&argErr)
	if _res != 0 {
		err = HResult(_res)
	}
	return
}

var IID_IUnknown = NewGUID("{00000000-0000-0000-C000-000000000046}")

type IUnknown struct {
	*VTable
}

func (this *IUnknown) QueryInterface(iid *GUID) (object unsafe.Pointer, err error) {
	_res, _, _ := Syscall(this.VTable[0],
		this,
		iid,
		&object)
	if _res != 0 {
		err = HResult(_res)
	}
	return
}

func (this *IUnknown) AddRef() (newCount int) {
	_res, _, _ := Syscall(this.VTable[1],
		this)
	newCount = int(_res)
	return
}

func (this *IUnknown) Release() (newCount int) {
	_res, _, _ := Syscall(this.VTable[2],
		this)
	newCount = int(_res)
	return
}
